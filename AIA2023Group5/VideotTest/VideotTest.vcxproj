<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{df5e7158-a0bd-4c74-9d26-793ffdbf272c}</ProjectGuid>
    <RootNamespace>VideotTest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)includes\ovCommon;$(SolutionDir)includes;$(SolutionDir)includes\opencv\build\include;$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\include</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>$(SolutionDir)includes\opencv\build\x64\vc16\lib\opencv_world470d.lib;$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\lib\intel64\$(Configuration)\openvinod.lib;$(SolutionDir)includes\ovlibs\intel64\$(Configuration)\utils.lib;$(SolutionDir)includes\ovlibs\intel64\$(Configuration)\gflags_nothreads_static_debug.lib;pdh.lib;shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\bin\intel64\$(Configuration)\*.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\bin\intel64\$(Configuration)\*.xml" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\3rdparty\tbb\bin\tbb_debug.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\opencv\build\x64\vc16\bin\opencv_world470d.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
if not exist "$(SolutionDir)$(Platform)\models\" mkdir "$(SolutionDir)$(Platform)\models\" 
xcopy "$(SolutionDir)models" "$(SolutionDir)$(Platform)\models\" /E /Y
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)includes\ovCommon;$(SolutionDir)includes;$(SolutionDir)includes\opencv\build\include;$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\include</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>$(SolutionDir)includes\opencv\build\x64\vc16\lib\opencv_world470.lib;$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\lib\intel64\$(Configuration)\openvino.lib;$(SolutionDir)includes\ovlibs\intel64\$(Configuration)\utils.lib;$(SolutionDir)includes\ovlibs\intel64\$(Configuration)\gflags_nothreads_static.lib;pdh.lib;shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\bin\intel64\$(Configuration)\*.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\bin\intel64\$(Configuration)\*.xml" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\openvino_toolkit_windows_2022.3.0\runtime\3rdparty\tbb\bin\tbb.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
copy "$(SolutionDir)includes\opencv\build\x64\vc16\bin\opencv_world470.dll" "$(SolutionDir)$(Platform)\$(Configuration)\"
if not exist "$(SolutionDir)$(Platform)\models\" mkdir "$(SolutionDir)$(Platform)\models\" 
xcopy "$(SolutionDir)models" "$(SolutionDir)$(Platform)\models\" /E /Y</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\includes\gazeEstimation\eye_state_estimator.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\face_detector.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\face_inference_results.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\gaze_estimator.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\head_pose_estimator.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\ie_wrapper.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\landmarks_estimator.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\results_marker.cpp" />
    <ClCompile Include="..\includes\gazeEstimation\utils.cpp" />
    <ClCompile Include="VideotTest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\includes\gazeEstimation\base_estimator.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\eye_state_estimator.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\face_detector.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\face_inference_results.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\gaze_estimator.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\head_pose_estimator.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\ie_wrapper.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\landmarks_estimator.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\results_marker.hpp" />
    <ClInclude Include="..\includes\gazeEstimation\utils.hpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>